from math import log,atan

def function_one():
    def df(p):
        return log(1 - log(p[0]*(1-p[0])*p[1]*(1-p[1])))
    return df

def function_two():
    def df(p):
        return atan(-log(p[0]*(1-p[0])*p[1]*(1-p[1])))
    return df
    
def function_one_first_derivative():
    def first_derivative(p):
        return [(2*p[0]-1)/((p[0]-1)*p[0]*(log((p[0]-1)*p[0]*(p[1]-1)*p[1])-1)), (2*p[1]-1)/((p[1]-1)*p[1]*(log((p[0]-1)*p[0]*(p[1]-1)*p[1])-1))]
    return first_derivative

def function_two_first_derivative():
    def first_derivative(p):
        return [(1-2*p[0])/((p[0]-1)*p[0]*(log((p[0]-1)*p[0]*(p[1]-1)*p[1])**2+1)), (1-2*p[1])/((p[1]-1)*p[1]*(log((p[0]-1)*p[0]*(p[1]-1)*p[1])**2+1))]
    return first_derivative


def function_one_second_derivative():
    def second_derivative(p):
        aone=   (-(((1 - p[0])*(1 - p[1])*p[1] - p[0]*(1 - p[1])*p[1])**(2)/((1 - p[0])**(2)*p[0]**(2)*(1 - p[1])**(2)*p[1]**(2)*(1 - log((1 - p[0])*p[0]*(1 - p[1])*p[1]))**(2))) + \
                (((1 - p[0])*(1 - p[1])*p[1] - p[0]*(1 - p[1])*p[1])/((1 - p[0])*p[0]**(2)*(1 - p[1])*p[1]*(1 - log((1 - p[0])*p[0]*(1 - p[1])*p[1])))) - \
                (((1 - p[0])*(1 - p[1])*p[1] - p[0]*(1 - p[1])*p[1])/((1 - p[0])**(2)*p[0]*(1 - p[1])*p[1]*(1 - log((1 - p[0])*p[0]*(1 - p[1])*p[1])))) + \
                (2/((1 - p[0])*p[0]*(1 - log((1 - p[0])*p[0]*(1 - p[1])*p[1])))))
        
        atwo=   (-((((1 - p[0])*p[0]*(1 - p[1]) - (1 - p[0])*p[0]*p[1])*((1 - p[0])*(1 - p[1])*p[1] - p[0]*(1 - p[1])*p[1]))/((1 - p[0])**(2)*p[0]**(2)*(1 - p[1])**(2)*p[1]**(2)*(1 - log((1 - p[0])*p[0]*(1 - p[1]) *p[1]))**(2))) + \
                ((1 - p[0])*(1 - p[1])*p[1] - p[0]*(1 - p[1])*p[1])/((1 - p[0])*p[0]*(1 - p[1])*p[1]**(2)*(1 - log((1 - p[0])*p[0]*(1 - p[1])*p[1]))) - \
                ((1 - p[0])*(1 - p[1]) - p[0]*(1 - p[1]) - (1 - p[0])*p[1] + p[0]*p[1])/((1 - p[0])*p[0]*(1 - p[1])*p[1]*(1 - log((1 - p[0])*p[0]*(1 - p[1])*p[1]))) - \
                ((1 - p[0])*(1 - p[1])*p[1] - p[0]*(1 - p[1])*p[1])/((1 - p[0])*p[0]*(1 - p[1])**(2)*p[1]*(1 - log((1 - p[0])*p[0]*(1 - p[1])*p[1]))))

        athree= (-((((1 - p[0])*p[0]*(1 - p[1]) - (1 - p[0])*p[0]*p[1])*((1 - p[0])*(1 - p[1])*p[1] - p[0]*(1 - p[1])*p[1]))/((1 - p[0])**(2)*p[0]**(2)*(1 - p[1])**(2)*p[1]**(2)*(1 - log((1 - p[0])*p[0]*(1 - p[1])*p[1]))**(2)))+ \
                (((1 - p[0])*p[0]*(1 - p[1]) - (1 - p[0])*p[0]*p[1])/((1 - p[0])*p[0]**(2)*(1 - p[1])*p[1]*(1 - log((1 - p[0])*p[0]*(1 - p[1])*p[1])))) - \
                (((1 - p[0])*(1 - p[1]) - p[0]*(1 - p[1]) - (1 - p[0])*p[1] + p[0]*p[1])/((1 - p[0])*p[0]*(1 - p[1])*p[1]*(1 - log((1 - p[0])*p[0]*(1 - p[1])*p[1])))) - \
                (((1 - p[0])*p[0]*(1 - p[1]) - (1 - p[0])*p[0]*p[1])/((1 - p[0])**(2)*p[0]*(1 - p[1])*p[1]*(1 - log((1 - p[0])*p[0]*(1 - p[1])*p[1])))))

        afour=  (-(((1 - p[0])*p[0]*(1 - p[1]) - (1 - p[0])*p[0]*p[1])**(2)/((1 - p[0])**(2)*p[0]**(2)*(1 - p[1])**(2)*p[1]**(2)*(1 - log((1 - p[0])*p[0]*(1 - p[1])*p[1]))**(2)))+ \
                (((1 - p[0])*p[0]*(1 - p[1]) - (1 - p[0])*p[0]*p[1])/((1 - p[0])*p[0]*(1 - p[1])*p[1]**(2)*(1 - log((1 - p[0])*p[0]*(1 - p[1])*p[1]))))- \
                (((1 - p[0])*p[0]*(1 - p[1]) - (1 - p[0])*p[0]*p[1])/((1 - p[0])*p[0]*(1 - p[1])**(2)*p[1]*(1 - log((1 - p[0])*p[0]*(1 - p[1])*p[1]))))+ \
                (2/((1 - p[1])*p[1]*(1 - log((1 - p[0])*p[0]*(1 - p[1])*p[1])))))
        
        return [[aone,atwo],[athree,afour]]
    return second_derivative